module Experiment

  # This makes it so you can call 'driver', 'exporter', or 'xlsx_parser' to read 
  # the variable or object set in initialize, but can't redefine it in this class itself.
  # Being able to set an instance variable requires you to use 'attr_accessible' instead of "attr_reader".

  attr_reader :driver, :exporter, :xlsx_parser
 
  def initialize()

  	# This method accesses the preset Experiment Setup spreadsheet to load basic experiment parameters into 
  	# global variables for access by other parts of the code.  Parameters include file names and locations
  	# for further run configuration and results information.  These actions rely on the spreadsheet access
  	# functions to convert pc paths to single quote strings with '\' being replaced by '\\'.
  	 
  	# open the experiment setup spreadsheet
  	wkbk = RubyXL::Parser.parse(EXPERIMENT_SETUP)
  	wksht = wkbk[0]

  	# run_count_index tracks the current run no. of $runs_todo and is used to create filenames for run results
  	# it must be written to Experiment Setup for each run including a nil value at experiment completion 

  	$runs_todo = wksht[1][2]				# read in the number of P123 runs to be performed
  	$run_count_index = wksht[1][4] ||= 0	# 0 unless resuming an interrupted series of runs

  	# read in the experiment data folder path and extract the experiment name from the end of it
  	# use these pieces to construct the todo and results file names/paths

  	$experiment_folder = wksht[1][1].value  	
  	experiment_name = $experiment_folder[$experiment_folder('\\')+1..-1]
  	$results_path = $experiment_folder + '\0-' + experiment_name + ' Results.xlsx'
  	$todo_path = $experiment_folder + '\1-' + experiment_name + ' Todo.xlsx'

  	# create the base run result file name with path: run number to be appended
  	# experiment_folder//run_data_filename-01, -02, ..., runs_todo

  	run_data_filename = wksht[3][1] ||= experiment_name
  	$base_runfile = $experiment_folder + '\\' + run_data_filename + '-'

  	# also read in P123 URLs needed for rank weight access, universe selection, etc.
  	# may include backtest results URL?

  	# TO AVOID ACCUMULATING TOO MANY SPREADSHEETS IN MEMORY: clear the individual results data file and then rename it for each run?

  end

  def convert_pc_path(path_string)

    # converts a pc format path like "C:\\Users\\Scott" to "C:/Users/Scott"
    char_array = path_string.chars
    char_array.each_index { |x| if char_array[x] == "\\" then char_array[x] = "/" end }
    path_string = char_array.join
    
    # does this alter parameter path_string itself or just return converted string?
  end

end
